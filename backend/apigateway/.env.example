# ========================================
# API GATEWAY SERVICE CONFIGURATION
# ========================================
# Copy this file to .env and fill in your actual values
# This file serves as a template and should be committed to GitHub
# The actual .env file should NEVER be committed

# ========================================
# SERVER CONFIGURATION
# ========================================
PORT=3000
NODE_ENV=development

# ========================================
# MICROSERVICE URLS
# ========================================
# URLs for all backend microservices
# Development: Use localhost with respective ports
# Docker: Use service names (e.g., http://auth-service:3001)
# Production: Use actual deployed URLs

# Authentication Service - Handles login, signup, Google OAuth
AUTH_SERVICE_URL=http://localhost:3001

# Gym Service - Manages gym profiles, plans, and trainer assignments
GYM_SERVICE_URL=http://localhost:3002

# Payment Service - Handles Stripe payments and subscriptions
PAYMENT_SERVICE_URL=http://localhost:3003

# User Service - Manages customer profiles and progress tracking
USER_SERVICE_URL=http://localhost:3004

# Trainer Service - Manages trainer profiles and training plans
TRAINER_SERVICE_URL=http://localhost:3005

# Admin Service - Platform administration and analytics
ADMIN_SERVICE_URL=http://localhost:3006

# ========================================
# FRONTEND CONFIGURATION
# ========================================
# Frontend application URL
# Development: http://localhost:3010
# Production: https://your-domain.vercel.app
FRONTEND_URL=http://localhost:3010

# ========================================
# SECURITY CONFIGURATION
# ========================================
# JWT Secret - MUST match the secret used in AuthService
# IMPORTANT: Use a strong, unique secret in production
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# ========================================
# RATE LIMITING
# ========================================
# Protection against DDoS and brute force attacks
# Window in milliseconds (default: 900000 = 15 minutes)
RATE_LIMIT_WINDOW_MS=900000

# Maximum requests per IP within the window (default: 100)
RATE_LIMIT_MAX_REQUESTS=100

# ========================================
# CORS CONFIGURATION
# ========================================
# Comma-separated list of allowed origins
# Development: Include all local development URLs
# Production: Only include your deployed frontend URLs
# Example: https://fitnest.com,https://www.fitnest.com
CORS_ORIGINS=http://localhost:3010,http://localhost:3000

# ========================================
# LOGGING & MONITORING (Optional)
# ========================================
# Log level: debug, info, warn, error
# LOG_LEVEL=info

# Enable detailed request logging (true/false)
# ENABLE_REQUEST_LOGGING=true

# ========================================
# DOCKER-SPECIFIC CONFIGURATION
# ========================================
# When running with docker-compose, use service names:
# AUTH_SERVICE_URL=http://auth-service:3001
# GYM_SERVICE_URL=http://gym-service:3002
# PAYMENT_SERVICE_URL=http://payment-service:3003
# USER_SERVICE_URL=http://user-service:3004
# TRAINER_SERVICE_URL=http://trainer-service:3005
# ADMIN_SERVICE_URL=http://admin-service:3006

# ========================================
# PRODUCTION EXAMPLE
# ========================================
# NODE_ENV=production
# PORT=3000
# AUTH_SERVICE_URL=https://auth.fitnest.com
# GYM_SERVICE_URL=https://gym.fitnest.com
# PAYMENT_SERVICE_URL=https://payment.fitnest.com
# USER_SERVICE_URL=https://user.fitnest.com
# TRAINER_SERVICE_URL=https://trainer.fitnest.com
# ADMIN_SERVICE_URL=https://admin.fitnest.com
# FRONTEND_URL=https://fitnest.com
# CORS_ORIGINS=https://fitnest.com,https://www.fitnest.com
# JWT_SECRET=<use-a-strong-random-secret-here>
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100
