# ========================================
# TRAINER SERVICE CONFIGURATION
# ========================================
# Copy this file to .env and fill in your actual values
# This file serves as a template and should be committed to GitHub
# The actual .env file should NEVER be committed

# ========================================
# SERVER CONFIGURATION
# ========================================
PORT=3005
NODE_ENV=development

# ========================================
# SUPABASE CONFIGURATION
# ========================================
# Get these from: https://app.supabase.com/project/_/settings/api

# Supabase Project URL
SUPABASE_URL=https://your-project-id.supabase.co

# Supabase Service Role Key (server-side only, has admin privileges)
# IMPORTANT: Keep this secret! Never expose to client-side code
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# ========================================
# CLOUDINARY CONFIGURATION
# ========================================
# Cloudinary for image and document storage (trainer profiles, plan images)
# Get these from: https://cloudinary.com/console

CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=your_api_key
CLOUDINARY_API_SECRET=your_api_secret

# ========================================
# KAFKA CONFIGURATION
# ========================================
# Apache Kafka for event streaming
# Get these from your Kafka provider (e.g., Aiven, Confluent Cloud)

# Kafka broker address with port
# Format: your-kafka-instance.provider.com:port
KAFKA_BROKER=your-kafka-broker.aivencloud.com:20377

# Kafka authentication password
KAFKA_PASSWORD=your_kafka_password_here

# ========================================
# SERVICE PORTS (for reference)
# ========================================
# These define the ports for other services in the ecosystem
# Used for service-to-service communication

AUTH_SERVICE_PORT=3001
GYM_SERVICE_PORT=3002
PAYMENT_SERVICE_PORT=3003
API_GATEWAY_PORT=3000
FRONTEND_PORT=3010

# ========================================
# KAFKA TOPICS (Published by this service)
# ========================================
# This service publishes to the following Kafka topics:
# - trainer_session_created: Published when a trainer session is booked
#   Payload: { session_id, price, createdAt }
#   Consumed by: PaymentService (to create payment intent)

# ========================================
# TESTING CONFIGURATION
# ========================================
# For running tests, create a .env.test file with test database credentials
# See .env.test.example for testing environment configuration

# ========================================
# DATABASE TABLES (Used by this service)
# ========================================
# This service interacts with the following Supabase tables:
# - trainer: Trainer profiles and information
# - trainer_sessions: Training sessions between trainers and customers
# - trainer_plans: Training plans created by trainers
# - trainer_requests: Requests from trainers to join gyms
# - verifications: Trainer verification records
# - feedback: Customer feedback for trainers
# - gym: Gym information (read-only)
# - gym_plan_trainers: Association between trainers and gym plans
# - customer: Customer information (read-only for session booking)

# ========================================
# PRODUCTION EXAMPLE
# ========================================
# NODE_ENV=production
# PORT=3005
# SUPABASE_URL=https://your-project-id.supabase.co
# SUPABASE_SERVICE_ROLE_KEY=your_production_service_role_key
# CLOUDINARY_CLOUD_NAME=your_production_cloud_name
# CLOUDINARY_API_KEY=your_production_api_key
# CLOUDINARY_API_SECRET=your_production_api_secret
# KAFKA_BROKER=production-kafka-broker.provider.com:20377
# KAFKA_PASSWORD=your_production_kafka_password

# ========================================
# SECURITY NOTES
# ========================================
# 1. Never commit .env file to version control
# 2. Use strong, unique passwords for production
# 3. Rotate secrets regularly
# 4. Use different credentials for dev/test/prod environments
# 5. Store production secrets in secure vault (e.g., AWS Secrets Manager, Azure Key Vault)
# 6. Enable Row-Level Security (RLS) policies in Supabase for all tables
# 7. Use HTTPS in production for all endpoints
